1.- express framework de NodeJs

2.- socket.io

3.- para no usar node index.js se crea un comando para simplificar y evitar estar repitiendo el comando de nodejs de manera manual.

4.- npm i nodemon -D para evitar que se tenga que estar ejecutando y cancelando la consola de npm en el proyecto -D para que se como desarrollador.

5.- ejecutar npm run dev

6.- index.js
	se requiere express
	se inicializa express
	configuraci√≥n del puerto
		process.env.PORT : en caso de haber un puerto predefinido
	se inicializa path para trabajar con las rutas de los archivos en el servidor

	path.join (para concatenar la ruta del servidor con las carpeta contenedora no importando el SO)
	
	se requiere el socket.io que se instalo como dependencia para poder utilizarlo en el Chat

7.- instalar sass: npm install -g sass

8.- Instalar bootstrap


<div id="chat-container">
            <div id="chat-window">
                <div id="output"></div>
                <div id="actions"></div>
            </div>
            
        </div>

        <div id="send-msj-container">
            <div class="row cajas">
                <div class="col-md-2">
                    <label class="titulos">Usuario:</label>
                </div>
                <div class="col">
                    <input type="text" class="form-control" placeholder="Usuario" id="username" placeholder="username">
                </div>
            </div>

            <div class="row">
                <div class="col-md-2">
                    <label class="titulos">Mensaje:</label>
                </div>
                <div class="col">
                    <input type="text" class="form-control" id="message" placeholder="mensaje">
                </div>
            </div>
            
            <hr>

            <div class="row">
                <div class="col">
                    <button id="send" class="btn btn-success">Enviar</button>
                </div>
            </div>
        </div>




		#chat-container {
    max-width: 600px;
    height: 500px;
    margin: 30px auto;
    border: 1px solid #ddd;
    box-shadow: 1px 3px 5px rgba(0, 0, 0, 0.5);
    overflow: auto;
}

#send-msj-container {
    max-width: 600px;
    margin: 10px auto;
    border: 0px solid #ddd;
    box-shadow: 2px 3px 5px rgba(0, 0, 0, 0.5);
    .cajas {
        padding: 10px 0;
    }
}

#chat-window {
    padding: 14px 0;
    margin: 0 20px;
    border-bottom: 1px solid #a52727;
    color: $color-comentario;
}

#output {
    p {
        border: 1px solid #F2994A;
        color: #000046;
        font-size: 10px;
        line-height: 1.3em;
        margin: 0 10px auto;
        padding: 5px 0;
        position: relative;
        text-align: left;
        width: 200px;
        background: #F2994A;
        background: -webkit-linear-gradient(to right, #F2C94C, #F2994A);
        background: linear-gradient(to right, #F2C94C, #F2994A);
        -moz-border-radius: 10px;
        -webkit-border-radius: 10px;
        -moz-box-shadow: 0 0 10px #F2994A;
        -webkit-box-shadow: 0 0 10px #F2994A;
    }
}

#actions {
    p {
        padding: 10px 0;
        margin: 0 20px;
        border-bottom: 1px solid #e9e9e9;
        color: $color-comentario;
    }
}

input {
    padding: 10px 20px;
    box-sizing: border-box;
    border: 0px;
    background: #eee;
    display: block;
    width: 100%;
    -moz-border-radius: 5px;
    -webkit-border-radius: 5px;
    -moz-box-shadow: 0 0 5px #eee;
    -webkit-box-shadow: 0 0 5px #eee;
}

button {
    background: #1d23b9;
    color: #fff;
    font-size: 18px;
    border: 0;
    padding: 12px 0;
    width: 100%;
    border-radius: 0 0 2px 2px;
}

span {
    padding: 5px 0;
    display: block;
    .newmsj {
        font-size: 12px;
        font-weight: bold;
    }
}

label {
    display: block;
    padding-top: 10px;
    padding-left: 10px;
    color: rgb(242, 246, 250);
    font-size: medium;
    font-weight: bold;
}


chat.js


let message = document.getElementById('message');
let username = document.getElementById('username');
let btn = document.getElementById('send');
let output = document.getElementById('output');
let actions = document.getElementById('actions');



btn.addEventListener('click', function() {
    actions.innerHTML = ''
    socket.emit('chat:message', {
        username: username.value,
        message: message.value
    })
})

message.addEventListener('keypress', function() {
    socket.emit('chat:typing', username.value)
})

socket.on('chat:message', function(data) {
    actions.innerHTML = ''
    output.innerHTML += `
        <span class="newmsj">
            ${data.username}
        </span>
        <p>
            ${data.message}
        </p>`
})

socket.on('chat:typing', function(data) {
    actions.innerHTML = `<p><em>${data} esta escribiendo....</em></p>`
})